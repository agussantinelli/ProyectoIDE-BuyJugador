@page "/tipo-producto/editar/{Id:int}"
@attribute [Authorize]

@using ApiClient
@using DTOs
@inject TipoProductoApiClient tipoProductoApiClient
@inject NavigationManager NavigationManager

<link href="css/Table.css" rel="stylesheet" />
<link href="css/Form.css" rel="stylesheet" />

<div class="form-container">
    @if (_tipoProducto == null)
    {
        <div class="tbl-state">
            <i class="bi bi-arrow-repeat spin"></i> Cargando...
        </div>
    }
    else
    {
        <div class="form-header">
            <h3 class="form-title">Editando: @_tipoProducto.Descripcion</h3>
            <button class="btn btn-secondary" @onclick="Cancelar">
                <i class="bi bi-arrow-left"></i>
                <span>Volver</span>
            </button>
        </div>

        <EditForm Model="@_tipoProducto" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="descripcion">Descripción</label>
                <InputText id="descripcion" class="form-control" @bind-Value="_tipoProducto.Descripcion" />
                <ValidationMessage For="@(() => _tipoProducto.Descripcion)" />
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i>
                    <span>Guardar Cambios</span>
                </button>
                <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">
                    <i class="bi bi-x-circle"></i>
                    <span>Cancelar</span>
                </button>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }
    private TipoProductoDTO? _tipoProducto;

    protected override async Task OnInitializedAsync()
    {
        _tipoProducto = await tipoProductoApiClient.GetByIdAsync(Id);
    }

    private async Task Guardar()
    {
        if (_tipoProducto is null) return;
        await tipoProductoApiClient.UpdateAsync(Id, _tipoProducto);
        NavigationManager.NavigateTo("/tipo-producto");
    }

    private void Cancelar() => NavigationManager.NavigateTo("/tipo-producto");
}

@page "/pedido/detalle/{PedidoId:int}"
@attribute [Authorize]

@using DTOs
@using ApiClient
@inject PedidoApiClient pedidoApiClient
@inject NavigationManager NavigationManager

<div class="form-container">
    @if (isLoading)
    {
        <div class="tbl-state"><i class="bi bi-arrow-repeat spin"></i> Cargando detalle del pedido...</div>
    }
    else if (pedido == null)
    {
        <div class="alert alert-danger">No se encontró el pedido especificado.</div>
        <div class="form-actions">
            <button class="btn btn-secondary" @onclick="Volver">
                <i class="bi bi-arrow-left"></i> Volver al Listado
            </button>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="form-title mb-0">Detalle de Pedido #@pedido.IdPedido</h3>

            <div class="d-flex gap-2">
                @if (pedido.Estado?.Equals("Pendiente", StringComparison.OrdinalIgnoreCase) == true)
                {
                    <button class="btn btn-primary" @onclick="IrAEditar">
                        <i class="bi bi-pencil-square"></i> Editar
                    </button>
                }
                <button class="btn btn-secondary" @onclick="Volver">
                    <i class="bi bi-arrow-left"></i> Volver al Listado
                </button>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-4"><strong>Proveedor:</strong> @pedido.ProveedorRazonSocial</div>
            <div class="col-md-4"><strong>Fecha:</strong> @pedido.Fecha.ToString("dd/MM/yyyy")</div>
            <div class="col-md-4"><strong>Estado:</strong> @pedido.Estado</div>
        </div>

        <div class="tbl-wrapper">
            <table class="tbl">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th class="tbl-text-end">Precio Unit. (Costo)</th>
                        <th class="tbl-text-end">Cantidad</th>
                        <th class="tbl-text-end">Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var l in pedido.LineasPedido ?? new())
                    {
                        <tr>
                            <td>@l.NombreProducto</td>
                            <td class="tbl-text-end">@l.PrecioUnitario.ToString("C")</td>
                            <td class="tbl-text-end">@l.Cantidad</td>
                            <td class="tbl-text-end">@l.Subtotal.ToString("C")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="tbl-total-row">
                        <td colspan="3" class="tbl-text-end"><strong>TOTAL:</strong></td>
                        <td class="tbl-text-end">
                            <strong>@((pedido.LineasPedido ?? new()).Sum(x => x.Subtotal).ToString("C"))</strong>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
</div>

@code {
    [Parameter] public int PedidoId { get; set; }
    private PedidoDTO? pedido;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        pedido = await pedidoApiClient.GetByIdAsync(PedidoId);
        isLoading = false;
    }

    private void Volver() => NavigationManager.NavigateTo("/pedido");
    private void IrAEditar() => NavigationManager.NavigateTo($"/pedido/editar/{PedidoId}");
}

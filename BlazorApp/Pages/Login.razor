@page "/login"
@layout EmptyLayout
@attribute [AllowAnonymous]

@using DTOs
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Nav
@inject AuthenticationStateProvider Auth

<AuthorizeView Context="auth">
    <NotAuthorized>
        <div class="login-container">
            <div class="card">
                <div class="card-body">
                    <h3>Iniciar Sesión</h3>

                    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                        <div class="form-group">
                            <label for="dni">DNI</label>
                            <InputNumber id="dni" class="form-control" @bind-Value="loginModel.Dni" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="pwd">Contraseña</label>
                            <InputText id="pwd" class="form-control" type="password"
                                       autocomplete="current-password" @bind-Value="loginModel.Password" />
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Login</button>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger mt-2">@errorMessage</div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </NotAuthorized>

    <Authorized>
        <RedirectTo Url="/inicio" />
    </Authorized>
</AuthorizeView>

@code {
    private class LoginModel { public int Dni { get; set; } public string Password { get; set; } = ""; }
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            errorMessage = null;
            var resp = await Http.PostAsJsonAsync("api/personas/login", loginModel);
            if (resp.IsSuccessStatusCode)
            {
                var user = await resp.Content.ReadFromJsonAsync<PersonaDTO>();
                await ((CustomAuthenticationStateProvider)Auth).MarkUserAsAuthenticated(user!);
                Nav.NavigateTo("/inicio");
            }
            else errorMessage = "DNI o contraseña incorrectos.";
        }
        catch
        {
            errorMessage = "Ocurrió un error al intentar iniciar sesión.";
        }
    }
}
